// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prime_Financial_Holdings.Data;

#nullable disable

namespace Prime_Financial_Holdings.Migrations
{
    [DbContext(typeof(DbContextApplic))]
    [Migration("20220605131048_sozmozhoz")]
    partial class sozmozhoz
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Account", b =>
                {
                    b.Property<int>("accountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountNumber"), 1L, 1);

                    b.Property<int?>("LoanID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("balance")
                        .HasColumnType("real");

                    b.Property<float>("loanAmount")
                        .HasColumnType("real");

                    b.Property<bool>("requestedCheckbook")
                        .HasColumnType("bit");

                    b.HasKey("accountNumber");

                    b.HasIndex("LoanID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Bill", b =>
                {
                    b.Property<int>("billReferenceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("billReferenceNumber"), 1L, 1);

                    b.Property<float>("billAmount")
                        .HasColumnType("real");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("paidby")
                        .HasColumnType("int");

                    b.HasKey("billReferenceNumber");

                    b.HasIndex("companyName");

                    b.HasIndex("paidby");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Company", b =>
                {
                    b.Property<string>("registeredName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("contactNumber")
                        .HasColumnType("bigint");

                    b.HasKey("registeredName");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Feedback", b =>
                {
                    b.Property<int>("feedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feedbackId"), 1L, 1);

                    b.Property<string>("feedbackMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("feedbackId");

                    b.HasIndex("userName");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("amount")
                        .HasColumnType("real");

                    b.HasKey("LoanId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Transaction", b =>
                {
                    b.Property<int>("TRX_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TRX_ID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("accountNumber")
                        .HasColumnType("int");

                    b.Property<float>("amount")
                        .HasColumnType("real");

                    b.Property<int?>("beneficiaryAccount")
                        .HasColumnType("int");

                    b.Property<string>("time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TRX_ID");

                    b.HasIndex("accountNumber");

                    b.HasIndex("beneficiaryAccount");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.HasIndex("AccountNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Account", b =>
                {
                    b.HasOne("Prime_Financial_Holdings.Models.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Bill", b =>
                {
                    b.HasOne("Prime_Financial_Holdings.Models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyName");

                    b.HasOne("Prime_Financial_Holdings.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("paidby");

                    b.Navigation("Account");

                    b.Navigation("company");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Feedback", b =>
                {
                    b.HasOne("Prime_Financial_Holdings.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userName");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.Transaction", b =>
                {
                    b.HasOne("Prime_Financial_Holdings.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("accountNumber");

                    b.HasOne("Prime_Financial_Holdings.Models.Account", "benAccount")
                        .WithMany()
                        .HasForeignKey("beneficiaryAccount");

                    b.Navigation("Account");

                    b.Navigation("benAccount");
                });

            modelBuilder.Entity("Prime_Financial_Holdings.Models.User", b =>
                {
                    b.HasOne("Prime_Financial_Holdings.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountNumber");

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
